#!/bin/bash
# Script to start a Jupyter Lab session in the background using tmux
# and allow attaching to it later if needed.
# Something simillar to the bellow code.
    #!/bin/bash
    # geo &
    # jupyter-lab --no-browser --port 8887 &
    # brave &

# Define the session name and the directory where you want to start Jupyter Lab
TERM_TITLE="JupyterLab"
SESSION_NAME="JupyterLabSession"
PROJECT_DIR="/home/ggrl/projetos/"
JUPYTER_PORT=8555

# Função para checar se jupyter-lab está rodando em uma porta específica
is_jupyter_running(){
    lsof -i:$JUPYTER_PORT | grep LISTEN > /dev/null
    return $?
}

# Checa se existe uma sessão do tmux chamada TestPredTerra
if tmux has-session -t $SESSION_NAME 2>/dev/null; then
    # Se a sessão TestPredTerra existir, verifica se está attached
    if ! tmux list-sessions -F '#{session_name}:#{session_attached}' | grep -q "^${SESSION_NAME}:1$"; then
        # Se TestPreditorTerra não estiver attached, attach à sessão e executa o script Python
        alacritty --title $TERM_TITLE -e tmux attach-session -t $SESSION_NAME
        firefox &
    else
        firefox &
    fi
else
    # Checa se jupyter-lab está rodando
    if is_jupyter_running; then
        echo " 2.1 Jupyter Lab is already running on port $JUPYTER_PORT"
        firefox &
    else
        # Abre uma tmux new session com $SESSION_NAME e executa comandos
        tmux new-session -s $SESSION_NAME -d -c "$PROJECT_DIR" && \
        tmux send-keys -t $SESSION_NAME 'pyenv activate sismologia' C-m && \
        tmux send-keys -t $SESSION_NAME "jupyter-lab --no-browser --port '$JUPYTER_PORT' &" C-m && \
        firefox &
    fi
fi
